<?xml version="1.0" ?>
<!--
/**
 * OrangeHRM is a comprehensive Human Resource Management (HRM) System that captures
 * all the essential functionalities required for any enterprise.
 * Copyright (C) 2006 OrangeHRM Inc., http://www.orangehrm.com
 *
 * OrangeHRM is free software; you can redistribute it and/or modify it under the terms of
 * the GNU General Public License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * OrangeHRM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
 * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along with this program;
 * if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
 * Boston, MA  02110-1301, USA
 *
 * @copyright 2006 OrangeHRM Inc., http://www.orangehrm.com
 */
-->
<project name="OrangeHRM" basedir="." default="dist">

  <property name="version" value="2.2"/>

  <property name="project.dir" value=".." />
  <property name="package.name" value="orangehrm2"/>
  <property name="dist.dir" value="dist"/>
  <property name="package.dir" value="${dist.dir}/${package.name}"/>
  <property name="reports.dir" value="reports"/>
  <property name="test.reports.dir" value="${reports.dir}/tests"/>
  <property name="test.coverage.dir" value="${reports.dir}/coverage"/>
  <property name="apidocs.dir" value="${dist.dir}/apidocs"/>
  <property name="xampp.dir" value="../../xampp"/>

  <target name="prepare">
    <echo msg="Preparing build..." />
    <mkdir dir="${dist.dir}" />
    <mkdir dir="${package.dir}" />
    <mkdir dir="${reports.dir}" />
    <mkdir dir="${test.reports.dir}" />
    <mkdir dir="${test.coverage.dir}" />
    <mkdir dir="${apidocs.dir}" />
  </target>

  <target name="build" depends="prepare">
    <echo>Copying files...</echo>
    <copy todir="${package.dir}">
        <fileset dir="${project.dir}">
            <include name="**"/>
            <exclude name="build/**"/>
            <exclude name="devDocs/**"/>
            <exclude name="devTools/**"/>
            <exclude name="**/testConf.php"/>
            <exclude name="lib/confs/Conf.php"/>
            <exclude name="installer/log.txt"/>
            <exclude name="lib/logs/logDB.txt"/>
            <exclude name="lib/logs/notification_mails.log"/>
        </fileset>
    </copy>
  </target>

  <target name="dist" depends="build">
    <echo message="Creating archive..." />
    <zip destfile="${dist.dir}/OrangeHRM-ver-${version}.zip">
        <fileset dir="${dist.dir}">
            <include name="${package.name}/**"/>
        </fileset>
    </zip>
    <tar destfile="${dist.dir}/OrangeHRM-ver-${version}.tar.gz" compression="gzip">
    	<fileset dir="${dist.dir}">
            <include name="${package.name}/**"/>
        </fileset>
    </tar>
  </target>

  <target name="dist.major">
  	<phingcall target="dist" />
  	<phingcall target="dist.bin.win" />
  </target>

  <target name="dist.bin.win">
  	<echo message="Copying XAMPP files..." />
    <copy todir="${dist.dir}/installer-tmp/SOURCE/xampp">
    	<fileset dir="${xampp.dir}" >
    		<include name="**"/>
    	</fileset>
    </copy>
    <echo message="Copying the package..." />
    <copy todir="${dist.dir}/installer-tmp/SOURCE/${package.name}">
    	<fileset dir="${package.dir}" >
    		<include name="**"/>
    	</fileset>
    </copy>
    <echo message="Copying XAMPP files..." />
    <copy todir="${dist.dir}/installer-tmp/">
    	<fileset dir="${project.dir}/devTools/installer" >
    		<include name="**"/>
    	</fileset>
    </copy>
    <echo message="Creating the installer..." />
    <exec command="makensis ${dist.dir}/installer-tmp/SPEC/main.nsi" checkreturn="true" />
  </target>

  <target name="dist.win" depends="build">
  	<phingcall target="dist.bin.win" />
  </target>

  <target name="clean">
    <echo msg="Cleaning up..."/>
    <delete dir="${dist.dir}"/>
    <delete dir="${reports.dir}" />
  </target>

  <target name="test" depends="prepare">
      <phpunit2 haltonfailure="false" haltonerror="true" printsummary="true">
	  	  <formatter type="plain" usefile="false"/>
          <batchtest>
              <fileset dir="${project.dir}/lib">
                  <include name="**/*Test.php"/>
              </fileset>
          </batchtest>
      </phpunit2>
  </target>

  <target name="test.report" depends="prepare">
      <phpunit2>
          <formatter todir="${test.reports.dir}" type="xml" outfile="testreport.xml"/>
          <batchtest>
              <fileset dir="${project.dir}/lib">
                  <include name="**/*Test.php"/>
              </fileset>
          </batchtest>
      </phpunit2>
      <phpunit2report infile="${test.reports.dir}/testreport.xml"
          format="frames" todir="${test.reports.dir}" styledir="report-styles"/>
  </target>

  <!-- Coverage task that uses phpunit's built in coverage feature -->
  <target name="coverage" depends="prepare">
	<exec command="phpunit --report ${test.coverage.dir} AllTests ${project.dir}/lib/AllTests.php"
		checkreturn="true" dir="${project.basedir}" passthru="true"/>
  </target>

  <!-- The coverage target will not work if the php XDebug extension is not installed -->
  <target name="coverage.phing" depends="prepare">

      <coverage-setup database="${test.coverage.dir}/coverage.db">
          <fileset dir=".">
              <include name="testConf.php"/>
          </fileset>
          <fileset dir="${project.dir}/lib">
              <include name="**/*.php"/>
              <exclude name="**/*Test.php"/>

	      <!-- exclude 3rd party classes. -->
              <exclude name="common/xajax/**"/>
              <exclude name="common/htmlMimeMail5/**"/>

              <!-- excluded because these classes conflict with phing class names.
                   we really need to use package names
              -->
              <exclude name="models/eimadmin/Location.php"/>
              <exclude name="models/eimadmin/Education.php"/>

	      <!-- exclude files not containing any classes. -->
              <exclude name="controllers/CentralController.php"/>
              <exclude name="controllers/BugViewController.php"/>
              <exclude name="confs/mailConf.php"/>
              <exclude name="confs/Conf-auto.php"/>

              <!-- Not sure why these don't work ?. Prob because they depend on excluded classes. -->
              <exclude name="controllers/ViewController.php"/>
              <exclude name="extractor/eimadmin/EXTRACTOR_Location.php"/>
              <exclude name="extractor/eimadmin/EXTRACTOR_Qualifications.php"/>

              <!-- unused file? -->
              <exclude name="extractor/eimadmin/EXTRACTOR_QualificationType.php"/>

          </fileset>
      </coverage-setup>

      <phpunit2 codecoverage="true">
          <batchtest>
              <fileset dir="${project.dir}/lib">
                  <include name="**/*Test.php"/>
              </fileset>
          </batchtest>
      </phpunit2>

      <coverage-report outfile="${test.coverage.dir}/coverage.xml">
          <report todir="${test.coverage.dir}" styledir="report-styles"/>
      </coverage-report>
  </target>

  <!-- Copies the default language files to the en directory -->
  <target name="en.lang">
      <copy todir="${project.dir}/language/en" overwrite="true">
          <mapper type="regexp" from="^(.*)_default_(.*)$" to="\1_en_\2"/>
          <fileset dir="${project.dir}/language/default/">
              <include name="*.php"/>
          </fileset>
      </copy>
  </target>

  <!-- Copies the en language files to the default directory -->
  <target name="default.lang">
      <copy todir="${project.dir}/language/default" overwrite="true">
          <mapper type="regexp" from="^(.*)_en_(.*)$" to="\1_default_\2"/>
          <fileset dir="${project.dir}/language/en/">
              <include name="*.php"/>
          </fileset>
      </copy>
  </target>

  <target name="phpdoc" depends="prepare">
      <phpdoc title="OrangeHRM API Documentation" destdir="${apidocs.dir}"
          sourcepath="${project.dir}/lib" output="HTML:Smarty:PHP"/>
  </target>
</project>
